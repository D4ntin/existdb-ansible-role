#!/bin/sh

ex_path="{{ exist_path }}"

# defaults
ex_running=false
ex_installed=false
ex_version=
ex_built=0
ex_branch=
ex_revision=
ex_jmxtoken=
ex_gitsrc=false

if [ -d "$ex_path" -a -f $ex_path/exist.jar -a -f $ex_path/VERSION.txt ]; then
    ex_installed=true
    ex_version=`grep project.version $ex_path/VERSION.txt | sed -e 's/project.version=//;'`
    ex_built=`grep project.built $ex_path/VERSION.txt | sed -e 's/project.built=//;'`
    ex_branch=`grep scm.branch $ex_path/VERSION.txt | sed -e 's/scm.branch=//;'`
    ex_revision=`grep scm.revision $ex_path/VERSION.txt | sed -e 's/scm.revision=//;'`
    if [ -f $ex_path/webapp/WEB-INF/data/jmxservlet.token ]; then
	ex_jmxtoken=`grep '^token=' $ex_path/webapp/WEB-INF/data/jmxservlet.token | sed -e 's/token=//;'`
    fi
fi

if [ -d "$ex_path/.git" ]; then
    ex_gitsrc=true
fi

if pgrep -lf '{{ exist_instname }}.start.jar' >/dev/null; then
    ex_running=true
fi


cat <<EOF
{
    "exist_installed": ${ex_installed},
    "exist_path": "${ex_path}",
    "exist_running": ${ex_running},
    "exist_version": "${ex_version}",
    "exist_build_date": "${ex_built}",
    "exist_branch": "${ex_branch}",
    "exist_revision": "${ex_revision}",
    "exist_jmxtoken": "${ex_jmxtoken}",
    "exist_gitsrc": ${ex_gitsrc}
}
EOF
